name: tests

on: [push, pull_request]

jobs:
  lint:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 8
      matrix:
        python-version: [3.8]
        os: [windows-latest]
        exclude:
          - os: macos-latest
            python-version: 3.6

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libusb-1.0-0-dev libudev-dev
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install libusb
    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        vcpkg install libusb
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python setup.py egg_info
        pip install -r liquidctl.egg-info/requires.txt
    - name: Run unit tests and module doctests (not windows)
      if: matrix.os != 'windows-latest'
      run: |
        pip install pytest
        XDG_RUNTIME_DIR=.tests_rundir pytest
    - name: Run unit tests and module doctests (windows)
      if: matrix.os == 'windows-latest'
      run: |
        pip install pytest
        pytest
    - name: Install and run the resulting executable
      if: matrix.os != 'windows-latest'
      run: |
        pip install .
        liquidctl list --verbose --debug
    - name: Install and run the resulting executable (windows)
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        python setup.py install
        python -m pip install pyinstaller
        pyinstaller --add-data MS64\dll\*;. --clean -F liquidctl\cli.py --name liquidctl --onefile --icon extra\windows\liquidctl_logo_v1_circle_256.ico --distpath .
        python -m liquidctl.cli list --verbose --debug

